
  name: CI/CD Pipeline for Microservices

  on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main

  jobs:
    build-and-push:
      runs-on: ubuntu-latest

      steps:
        # Чекаут кода
        - name: Checkout code
          uses: actions/checkout@v4

        # Настройка Docker Buildx для поддержки multi-stage builds
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        # Логин в Docker Hub
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Сборка и пуш bank-service
        - name: Build and push bank-service
          uses: docker/build-push-action@v5
          with:
            context: ./bank-service
            file: ./bank-service/Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/bank-service:latest
              ${{ secrets.DOCKERHUB_USERNAME }}/bank-service:${{ github.sha }}

        # Сборка и пуш customer-service
        - name: Build and push customer-service
          uses: docker/build-push-action@v5
          with:
            context: ./customer-service
            file: ./customer-service/Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/customer-service:latest
              ${{ secrets.DOCKERHUB_USERNAME }}/customer-service:${{ github.sha }}

        # Сборка и пуш frontend
        - name: Build and push frontend
          uses: docker/build-push-action@v5
          with:
            context: ./frontend
            file: ./frontend/Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
              ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

        # (Опционально) Тестирование с Docker Compose
        - name: Test with Docker Compose
          run: |
            docker-compose -f docker-compose.yml up -d
            sleep 30 # Ждём, пока сервисы запустятся
            curl -f http://localhost:3000 || exit 1 # Проверка фронтенда
            curl -f http://localhost:8081/swagger-ui.html || exit 1 # Проверка customer-service
            curl -f http://localhost:8082/swagger-ui.html || exit 1 # Проверка bank-service
            docker-compose -f docker-compose.yml down
